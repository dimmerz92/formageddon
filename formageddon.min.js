const Formageddon=(()=>{"use strict";const t=new WeakSet,e=["INPUT","TEXTAREA","SELECT"],r=["accept","min","max","step","minlength","maxlength","pattern","required"],a={valueMissing:{attr:"data-required-err",default:"This field is required."},typeMismatch:{attr:"data-type-err",default:"The value is not the correct type."},patternMismatch:{attr:"data-pattern-err",default:"The value does not match the required pattern."},tooLong:{attr:"data-maxlength-err",default:"The value is too long."},tooShort:{attr:"data-minlength-err",default:"The value is too short."},rangeOverflow:{attr:"data-max-err",default:"The value is too large."},rangeUnderflow:{attr:"data-min-err",default:"The value is too small."},stepMismatch:{attr:"data-step-err",default:"The value does not match the step interval."},badInput:{attr:"data-type-err",default:"The input value is invalid."}};function i(t){const e=t.getAttribute("data-confirm");if(!e)return!0;const r=document.querySelector(e);return r?t.value===r.value:(console.error(`element not found for data-confirm=${e}`),!1)}function n(t){t.setAttribute("aria-invalid","true");const e=t.getAttribute("aria-describedby");if(e){const r=document.getElementById(e);r?(r.classList.add("invalid"),r.classList.remove("valid"),r.textContent=function(t){if("file"===t.type&&t.hasAttribute("accept")&&t.value.trim()&&!function(t){const e=t.getAttribute("accept");if(!e)return!0;const r=e.split(",").map((t=>t.trim().toLowerCase())),a=t.files;if(!a.length)return!0;for(const t of a){const e=t.type.toLowerCase(),a=t.name.toLowerCase();if(!r.some((t=>t.startsWith(".")?a.endsWith(t):t.endsWith("/*")?e.startsWith(t.slice(0,-1)):e===t)))return!1}return!0}(t))return t.getAttribute("data-accept-err")||"Invalid file type.";if(t.hasAttribute("data-confirm"))return t.value.trim()&&!i(t)?t.getAttribute("data-confirm-err")||"Values do not match.":"";for(const[e,r]of Object.entries(a))if(t.validity[e])return t.getAttribute(r.attr)||r.default;return""}(t)):console.error(`element not found for aria-describedby="${e}"`)}}function o(t,e){t.checkValidity()&&0===t.querySelectorAll("[aria-invalid=true]").length?e.disabled=!1:e.disabled=!0}function d(t){i(t)&&t.validity.valid?t.value.trim()?function(t){t.setAttribute("aria-invalid","false");const e=t.getAttribute("aria-describedby");if(e){const r=document.getElementById(e);r?(r.classList.add("valid"),r.classList.remove("invalid"),r.textContent=t.getAttribute("data-success")||""):console.error(`element not found for aria-describedby="${e}"`)}}(t):function(t){t.removeAttribute("aria-invalid");const e=t.getAttribute("aria-describedby");if(e){const t=document.getElementById(e);t?(t.classList.remove("invalid","valid"),t.textContent=""):console.error(`element not found for aria-describedby="${e}"`)}}(t):n(t)}function s(t){if(t.addEventListener("input",(()=>d(t))),t.hasAttribute("data-confirm")){const e=t.getAttribute("data-confirm");if(!e)return void console.error("data-confirm attribute set without origin reference");const r=document.querySelector(e);if(!r)return void console.error(`element not found for data-confirm=${e}`);r.addEventListener("input",(()=>d(t)))}}function u(t,e){["INPUT","BUTTON"].includes(e.tagName)&&"submit"===e.type?(o(t,e),t.addEventListener("input",(()=>o(t,e)))):console.error("submission button expected to be of type input or button with type=submit")}document.addEventListener("DOMContentLoaded",(()=>{document.querySelectorAll("form[data-validate]").forEach((a=>{if(!t.has(a)){for(let t of a.elements){if(e.includes(t.tagName)&&!t.hasAttribute("data-ignore"))for(const e of t.attributes)if(r.includes(e.name)){s(t);break}t.hasAttribute("data-submit")&&u(a,t)}t.add(a)}}))}),{once:!0})})();